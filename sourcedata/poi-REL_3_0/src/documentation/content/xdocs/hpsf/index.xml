<?xml version="1.0" encoding="UTF-8"?>
<!--
   ====================================================================
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
   ====================================================================
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "../dtd/document-v11.dtd">
<!-- $Id$ -->

<document>
 <header>
  <title>Jakarta POI - HPSF - Java API to Handle Microsoft Format Document
   Properties</title>
  <subtitle>Overview</subtitle>
  <authors>     
   <person name="Rainer Klute" email="klute@apache.org"/>
  </authors>
 </header>
 <body>
  <section><title>Overview</title>

   <p>Microsoft applications like "Word", "Excel" or "Powerpoint" let the user
    describe his document by properties like "title", "category" and so on. The
    application itself adds further information: last author, creation date
    etc. These document properties are stored in so-called <strong>property set
     streams</strong>. A property set stream is a separate document within a
    <link href="../poifs/index.html">POI filesystem</link>. We'll call property
    set streams mostly just "property sets". HPSF is POI's pure-Java
    implementation to read and write property sets.</p>

   <p>The <link href="how-to.html">HPSF HOWTO</link> describes what a Java
    application should do to read a property set using HPSF, how to retrieve
    the information it needs, and how to write properties into the
    document.</p>

   <p>HPSF supports OLE2 property set streams in general, and is not limited to
    the special case of document properties in the Microsoft Office files
    mentioned above. The <link href="internals.html">HPSF description</link>
    describes the internal structure of property set streams. A separate
    document explains the internal of <link href="thumbnails.html">thumbnail
     images</link>.</p>
  </section>
 </body>
</document>

<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
