/*
 * RegistryParser.h - part of the jEdit Launcher package
 * Copyright (C) 2001 John Gellene
 * jgellene@nyc.rr.com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * Notwithstanding the terms of the General Public License, the author grants
 * permission to compile and link object code generated by the compilation of
 * this program with object code and libraries that are not subject to the
 * GNU General Public License, provided that the executable output of such
 * compilation shall be distributed with source code on substantially the
 * same basis as the jEditLauncher package of which this program is a part.
 * By way of example, a distribution would satisfy this condition if it
 * included a working makefile for any freely available make utility that
 * runs on the Windows family of operating systems. This condition does not
 * require a licensee of this software to distribute any proprietary software
 * (including header files and libraries) that is licensed under terms
 * prohibiting redistribution to third parties.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * $Id: RegistryParser.h,v 1.1 2001/09/05 11:24:52 jgellene Exp $
 */

#if !defined(__REGISTRYPARSER_H__)
#define __REGISTRYPARSER_H__

class RegistryParser
{
public:
	RegistryParser();
	virtual ~RegistryParser();

	/* Attributes */
	LPCTSTR GetCommandLine();
	LPCTSTR GetServerFilePath();
	LPCTSTR GetWorkingDirectory();

	/* Implementation */
private:
	BOOL InitCmdLine(HKEY hKey);
	BOOL FetchRegParam(HKEY hKey, LPCTSTR szParam,
		LPTSTR szCmdLine, UINT nError);
	BOOL InitServerPath();
	BOOL FetchCmdParam(LPCTSTR szSource, LPCTSTR szParam,
		LPTSTR szDest);
	BOOL InitWorkingDir(HKEY hKey);


	/* Data */
private:
	BOOL m_bIsInit;
	TCHAR m_strCmdLine[MAX_PATH * 4];
	TCHAR m_strServerPath[MAX_PATH];
	TCHAR m_strWorkingDir[MAX_PATH];

	/* No copying */
private:
	RegistryParser(const RegistryParser&);
	RegistryParser& operator=(const RegistryParser&);
};


#endif        //  #if !defined(__REGISTRYPARSER_H__)

